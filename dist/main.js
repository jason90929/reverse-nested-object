(()=>{"use strict";const e=function(e){let n=[];n=function e(n,o){if(console.log("recursiveGetValue1",n,o),"string"==typeof n)return{[n]:o};const t=Object.keys(n)[0];return console.log("key",t),e(n[t],o?{[t]:o}:t)}(e),console.log("nestedArray",n)},n=e({hired:{be:{to:{deserve:"I"}}}});console.log("result1",n);const o=e({one:{oneIn:{oneInner:"oneFinal"}},two:{twoIn:{twoInner:{twoInInner:"twoFinal"}}}});console.log("result2",o)})();